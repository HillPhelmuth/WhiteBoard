<div class="head-menu">
    <select @onchange="ChangeColor">
        <option value="black" style="background-color:black">Black</option>
        <option value="red" style="background-color:red">Red</option>
        <option value="blue" style="background-color:blue">Blue</option>
        <option value="green" style="background-color:green">Green</option>
        <option value="purple" style="background-color:purple">Purple</option>
    </select>

    <label>
        Thickness:
        <input type="number" min="1" max="10" @onchange="ChangeWidth" @bind-value="@selectedWidth" @bind-value:event="oninput" />
    </label>
    <label>
        Text:
        <input @bind-value="@_textInput" @onchange="ChangeText" @bind-value:event="oninput" />
    </label>
    <select @onchange="ChangeSelectOption" class="opts">
        <option value="">Dbl-click options</option>
        <option value="Text">Text</option>
        <option value="Oval">Oval</option>
        <option value="Rectangle">Rectangle</option>
    </select>
    <button @onclick="ToggleEraseMode">
        <img src="@ButtonIcon" alt="Button icon" width="30" height="30" />
        <span> @ButtonLabel</span>
    </button>
    <button @onclick="ToggleLineMode">
        <img src="@LineButtonIcon" alt="line button icon" width="30" height="30" />
        <span>@LineButtonLabel</span>
    </button>
    <button @onclick="@(async () => await SaveBoardAsImage.InvokeAsync())">Save</button>
    <button @onclick="@(async () => await ClearAndResize.InvokeAsync())">Clear</button>
    <button style="right:0px" @onclick="@(async () => await StartNew.InvokeAsync())">New</button>
</div>